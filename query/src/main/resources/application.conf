akka {
  log-config-on-start = off
  
  # SLF4J Configuration
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    serializers {
      #      java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }
    serialization-bindings {
      # This is nasty can we do something else then list them all?
      "nl.codestar.persistence.events.AppointmentCancelled" = proto
      "nl.codestar.persistence.events.AppointmentCreated" = proto
      "nl.codestar.persistence.events.AppointmentReassigned" = proto
      "nl.codestar.persistence.events.AppointmentMoved" = proto
    }
    debug {
      # enable function of LoggingReceive, which is to log any received message at
      # DEBUG level
      receive = on
      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      autoreceive = on
      # enable DEBUG logging of actor lifecycle changes: restarts, deaths
      lifecycle = on
      # enable DEBUG logging of unhandled messages
      unhandled = on
    }
  }

  persistence {
    # DO NOT USE THIS IN PRODUCTION !!!
    # See also https://github.com/typesafehub/activator/issues/287

    journal {
#      leveldb {
#        native = false
#        dir = "target/example/journal"
#      }
#     plugin = "akka.persistence.journal.leveldb"
      plugin = "cassandra-journal"
    }
    snapshot-store {
      #        plugin = "akka.persistence.snapshot-store.local"
      #        local.dir = "target/example/snapshots"
      plugin = "cassandra-snapshot-store"
    }
  }
}
cassandra-journal {
  contact-points = ${cassandra-contact-points}
}

cassandra-query-journal {
  refresh-interval = 1s
  eventual-consistency-delay = 2s
}

cassandra-snapshot-store {
  contact-points = ${cassandra-contact-points}
}

cassandra-contact-points = ["192.168.99.100"]

cassandra {
  contact-points = ${cassandra-contact-points}
  keyspace = appointmentquery
}