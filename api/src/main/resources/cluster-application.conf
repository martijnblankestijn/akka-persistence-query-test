include "application"

# Disable legacy metrics in akka-cluster.
akka.cluster.metrics.enabled=off

# Enable metrics extension in akka-cluster-metrics.
# akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"] enable if the module is added to the build.sbt

# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host.
# akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native

akka {
  cluster {
    seed-nodes = //["akka.tcp://appointmentSystem@0.0.0.0:2552"] // needed for clustering
    [${cluster.seed-nodes}]
  }
  remote {
    log-sent-messages = on
    log-received-messages = on
    log-frame-size-exceeding = 1000b
    log-remote-lifecycle-events = off
    netty.tcp {
//      bind-hostname = "192.168.1.100"
//      bind-port = ""
      
      hostname = ${cluster.ip}
      port = ${cluster.port}
    }
  }

  actor {
    provider = "cluster"  // needed for clustering
    serializers {
      #      java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }
    serialization-bindings {
//      "nl.codestar.persistence.Command"= proto
//      "nl.codestar.appointments.AppointmentActor$CreateAppointment"= proto
    }
  }
}

cluster {
  ip = "127.0.0.1"
  ip = ${?CLUSTER_IP}
  port = 2552
  port = ${?CLUSTER_PORT}
  seed-ip = "127.0.0.1"
  seed-ip = ${?CLUSTER_IP}
  seed-ip = ${?SEED_PORT_1600_TCP_ADDR}
  seed-port = 2552
  seed-port = ${?SEED_PORT_1600_TCP_PORT}
  name = "appointmentSystem"
  seed-nodes = "akka.tcp://"${cluster.name}"@"${cluster.seed-ip}":"${cluster.seed-port}
}